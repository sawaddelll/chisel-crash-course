;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit ALU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<8>[1], flip b : UInt<8>[1], flip ctrl : UInt<3>, result : UInt<8>[1], negative : UInt<1>, zero : UInt<1>, overflow : UInt<1>}
    
    wire max2comp : UInt<8> @[Adder.scala 21:22]
    max2comp <= UInt<8>("h080") @[Adder.scala 22:12]
    wire out : UInt<8>[1] @[Adder.scala 23:20]
    reg storedValue : UInt<8>[1], clock @[Adder.scala 24:31]
    storedValue[0] <= out[0] @[Adder.scala 24:31]
    wire overflowVector : UInt<1>[1] @[Adder.scala 26:30]
    wire zeroVector : UInt<1>[1] @[Adder.scala 27:26]
    wire negVector : UInt<1>[1] @[Adder.scala 28:25]
    node _T_88 = eq(io.ctrl, UInt<3>("h00")) @[Adder.scala 31:20]
    when _T_88 : @[Adder.scala 31:37]
      out[0] <= io.a[0] @[Adder.scala 32:16]
      skip @[Adder.scala 31:37]
    else : @[Adder.scala 33:36]
      node _T_89 = eq(io.ctrl, UInt<3>("h01")) @[Adder.scala 33:27]
      when _T_89 : @[Adder.scala 33:36]
        node _T_90 = add(io.a[0], io.b[0]) @[Adder.scala 34:27]
        node _T_91 = tail(_T_90, 1) @[Adder.scala 34:27]
        out[0] <= _T_91 @[Adder.scala 34:16]
        skip @[Adder.scala 33:36]
      else : @[Adder.scala 35:41]
        node _T_92 = eq(io.ctrl, UInt<3>("h02")) @[Adder.scala 35:27]
        when _T_92 : @[Adder.scala 35:41]
          node _T_93 = sub(io.a[0], io.b[0]) @[Adder.scala 36:27]
          node _T_94 = asUInt(_T_93) @[Adder.scala 36:27]
          node _T_95 = tail(_T_94, 1) @[Adder.scala 36:27]
          out[0] <= _T_95 @[Adder.scala 36:16]
          skip @[Adder.scala 35:41]
        else : @[Adder.scala 42:36]
          node _T_96 = eq(io.ctrl, UInt<3>("h03")) @[Adder.scala 42:27]
          when _T_96 : @[Adder.scala 42:36]
            node _T_97 = and(io.a[0], io.b[0]) @[Adder.scala 43:27]
            out[0] <= _T_97 @[Adder.scala 43:16]
            skip @[Adder.scala 42:36]
          else : @[Adder.scala 44:35]
            node _T_98 = eq(io.ctrl, UInt<3>("h04")) @[Adder.scala 44:27]
            when _T_98 : @[Adder.scala 44:35]
              node _T_99 = or(io.a[0], io.b[0]) @[Adder.scala 45:27]
              out[0] <= _T_99 @[Adder.scala 45:16]
              skip @[Adder.scala 44:35]
            else : @[Adder.scala 46:36]
              node _T_100 = eq(io.ctrl, UInt<3>("h05")) @[Adder.scala 46:27]
              when _T_100 : @[Adder.scala 46:36]
                node _T_101 = xor(io.a[0], io.b[0]) @[Adder.scala 47:27]
                out[0] <= _T_101 @[Adder.scala 47:16]
                skip @[Adder.scala 46:36]
              else : @[Adder.scala 48:20]
                out[0] <= UInt<8>("h00") @[Adder.scala 49:16]
                skip @[Adder.scala 48:20]
    node _T_104 = neq(io.result[0], UInt<1>("h00")) @[Adder.scala 51:39]
    node _T_105 = not(_T_104) @[Adder.scala 51:24]
    zeroVector[0] <= _T_105 @[Adder.scala 51:21]
    node _T_106 = bits(io.result[0], 7, 7) @[Adder.scala 52:35]
    negVector[0] <= _T_106 @[Adder.scala 52:20]
    node _T_107 = bits(io.a[0], 7, 7) @[Adder.scala 56:38]
    node _T_108 = bits(io.b[0], 7, 7) @[Adder.scala 56:62]
    node _T_109 = eq(_T_107, _T_108) @[Adder.scala 56:51]
    node _T_110 = bits(out[0], 7, 7) @[Adder.scala 56:86]
    node _T_111 = bits(io.a[0], 7, 7) @[Adder.scala 56:110]
    node _T_112 = neq(_T_110, _T_111) @[Adder.scala 56:99]
    node _T_113 = and(_T_109, _T_112) @[Adder.scala 56:76]
    overflowVector[0] <= _T_113 @[Adder.scala 56:27]
    io.result[0] <= storedValue[0] @[Adder.scala 59:15]
    node _T_115 = eq(zeroVector[0], UInt<1>("h00")) @[Adder.scala 61:36]
    node _T_117 = or(UInt<1>("h00"), _T_115) @[Adder.scala 61:36]
    node _T_119 = eq(_T_117, UInt<1>("h00")) @[Adder.scala 61:16]
    io.zero <= _T_119 @[Adder.scala 61:13]
    node _T_121 = eq(overflowVector[0], UInt<1>("h01")) @[Adder.scala 62:43]
    node _T_123 = or(UInt<1>("h00"), _T_121) @[Adder.scala 62:43]
    io.overflow <= _T_123 @[Adder.scala 62:17]
    node _T_125 = eq(negVector[0], UInt<1>("h01")) @[Adder.scala 63:38]
    node _T_127 = or(UInt<1>("h00"), _T_125) @[Adder.scala 63:38]
    io.negative <= _T_127 @[Adder.scala 63:17]
    
